generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SentUpdates {
  id                   Int                  @id @default(autoincrement())
  messageId            BigInt               @map("message_id")
  mode                 SubscriptionMode
  incidentId           String               @map("incident_id")
  incidentUpdateId     String               @map("incident_update_id")
  createdAt            DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime             @default(now()) @map("updated_at") @db.Timestamptz(6)
  subscriptionId       Int                  @map("subscription_id")
  subscriptions        Subscriptions        @relation(fields: [subscriptionId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([subscriptionId, incidentId, incidentUpdateId])
  @@unique([subscriptionId, messageId, incidentUpdateId])
  @@map("sent_updates")
}

model Subscriptions {
  id                  Int                  @id @default(autoincrement())
  guildId             BigInt               @unique @map("guild_id")
  channelId           BigInt               @unique @map("channel_id")
  mode                SubscriptionMode     @default(Edit)
  webhookId           BigInt?              @map("webhook_id")
  webhookToken        String?              @map("webhook_token")
  rolePings           BigInt[]             @default([]) @map("role_pings")
  createdAt           DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime             @default(now()) @map("updated_at") @db.Timestamptz(6)
  sentUpdates         SentUpdates[]

  @@map("subscriptions")
}

enum SubscriptionMode {
  Post @map("post")
  Edit @map("edit")

  @@map("subscription_mode")
}
